import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;


public abstract class Character {
	private Grid grid;
	private BufferedImage picture = null;
	private boolean imageShift = true;
	private int xLoc, yLoc;
	private int direction = 3;
	public static final int RIGHT = 1;
	public static final int UP = 2;
	public static final int LEFT = 3;
	public static final int DOWN = 4;
	private String name;
	double horSkewConstant=0;
	double vertSkewConstant=0;
	public Character(int xStart, int yStart, Grid g, String n){
		xLoc = xStart;
		yLoc = yStart;
		grid = g;
		name = n;
	}
	public String getName(){
		return name;
	}
	public Grid getGrid(){
		return grid;
	}
	public void setDirection(int direction){
		this.direction=direction;
	}
	public int getDirection(){
		return direction;
	}
	public double getHorSkewConstant(){
		return horSkewConstant;
	}
	public double getVertSkewConstant(){
		return vertSkewConstant;
	}
	public void setHorSkewConstant(double skew){
		horSkewConstant=skew;
	}
	public void setVertSkewConstant(double skew){
		vertSkewConstant=skew;
	}
	public int[] nextLocation(){
		if(direction == RIGHT){
			int[] ret = {xLoc+1,yLoc};
			return ret;
		}
		if(direction == LEFT){
			int[] ret = {xLoc-1,yLoc};
			return ret;
		}
		if(direction == UP){
			int[] ret = {xLoc,yLoc-1};
			return ret;
		}
		if(direction == DOWN){
			int[] ret = {xLoc,yLoc+1};
			return ret;
		}
		return null;
	}
	public int[] nextLocation(int direction){
		if(direction == RIGHT){
			int[] ret = {xLoc+1,yLoc};
			return ret;
		}
		if(direction == LEFT){
			int[] ret = {xLoc-1,yLoc};
			return ret;
		}
		if(direction == UP){
			int[] ret = {xLoc,yLoc-1};
			return ret;
		}
		if(direction == DOWN){
			int[] ret = {xLoc,yLoc+1};
			return ret;
		}
		return null;
	}
	public void setXLoc(int x){
		xLoc = x;
	}
	public void setYLoc(int y){
		yLoc = y;
	}
	public int[] getPositions(){
		int[] ret = {xLoc,yLoc};
		return ret;
	}
	public void toggleMouth(){
		imageShift = !imageShift;
	}
	public abstract void move();
	public void doNothing(){}
	public abstract void setPicture();
	public void passPicture(BufferedImage image){
		picture = image;
	}
	public boolean getImageShift(){
		return imageShift;
	}
	public BufferedImage getPicture(){
		return picture;
	}
}
