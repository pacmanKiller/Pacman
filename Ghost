import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.imageio.ImageIO;


public class Ghost extends Character{
	private String color;
	public final int RIGHT = 1;
	public final int UP = 2;
	public final int LEFT = 3;
	public final int DOWN = 4;
	public Ghost(int xStart, int yStart, Grid g, String col){
		super(xStart,yStart, g, "ghost");
		color = col;
	}
	public void move(){
		ArrayList moves = openDirections();
		setDirection((int)moves.get((int)(Math.random()*moves.size())));
		setXLoc(nextLocation()[0]);
		setYLoc(nextLocation()[1]);
		setHorSkewConstant(0);
		setVertSkewConstant(0);
	}
	private ArrayList openDirections(){
		ArrayList ret = new ArrayList();
		int opposite = 0;
		if(getGrid().isValid(nextLocation(1)[0],nextLocation(1)[1]) == 1){
			if(oppositeDirection(1))
				opposite = 1;
			else
				ret.add(1);
		}
		if(getGrid().isValid(nextLocation(2)[0],nextLocation(2)[1]) == 1){
			if(oppositeDirection(2))
				opposite = 2;
			else
				ret.add(2);
		}
		if(getGrid().isValid(nextLocation(3)[0],nextLocation(3)[1]) == 1){
			if(oppositeDirection(3))
				opposite = 3;
			else
				ret.add(3);
		}
		if(getGrid().isValid(nextLocation(4)[0],nextLocation(4)[1]) == 1){
			if(oppositeDirection(4))
				opposite = 4;
			else
				ret.add(4);
		}
		if(ret.size() == 0){
			ret.add(opposite);
		}
		return ret;
	}
	private boolean oppositeDirection(int dir){
		if(dir == Character.RIGHT && getDirection() == Character.LEFT)
			return true;
		if(dir == Character.LEFT && getDirection() == Character.RIGHT)
			return true;
		if(dir == Character.UP && getDirection() == Character.DOWN)
			return true;
		if(dir == Character.DOWN && getDirection() == Character.UP)
			return true;
		return false;
	}
	public void setPicture(){
		try {
			passPicture(ImageIO.read(new File("LeftPacmanMouthClosed.png")));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
